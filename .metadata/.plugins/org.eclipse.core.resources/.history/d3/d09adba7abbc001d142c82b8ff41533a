package frames;

import java.awt.Color;
import java.awt.Image;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.util.Vector;

import javax.swing.BorderFactory;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JComboBox;
import javax.swing.JLabel;
import javax.swing.border.LineBorder;
import javax.swing.border.TitledBorder;
import javax.xml.crypto.Data;

import base.comp.BaseCombo;
import base.comp.BaseFrame;
import base.comp.BasePanel;
import base.comp.imageLabel;
import data.DataManager;
import db.DbManager;
import image.ImageModel;
import model.model;
import model.res;

public class MainFrame extends BaseFrame {

	private DbManager db;
	private JLabel jlImg;
	private BaseCombo jcTop;
	private JButton jbLogin;
	private JButton jbSignUp;
	private JButton jbMyPage;
	private JButton jbRead;
	private JButton jbClose;
	private JButton jbBookList;

	public MainFrame() {
		// TODO Auto-generated constructor stub
		db = new DbManager();
		super.BaseFrame("메인", 1000, 844);
	}

	@Override
	public void setComp() {
		// TODO Auto-generated method stub
		jlImg = new imageLabel("로그인 후 이용해주세요", "메인3", 1000, 500).setSize(30).setTextCenter().setColorWhite();
		jcTop = new BaseCombo(res.getDivisionTableAll());

		jbLogin = new JButton("로그인");
		jbSignUp = new JButton("회원가입");
		jbBookList = new JButton("도서 목록");
		jbMyPage = new JButton("마이페이지");
		jbRead = new JButton("책 읽기");
		jbClose = new JButton("종료");

//		jbBookList.setEnabled(false);
//		jbMyPage.setEnabled(false);
//		jbRead.setEnabled(false);
	}

	@Override
	public void setDesign() {
		// TODO Auto-generated method stub
		jpTop.add(jlImg);

		jpCenter.addChild();
		jpCenter.jpCenter.setBorder(new TitledBorder(new LineBorder(Color.black), "인기 도서"));
		jpCenter.jpTop.setFlowLeft().add(jcTop);

		jpCenter.jpCenter.setGrid(1, 5, 10, 10);

		gridChange();

//		logOutState();
		logInState();
	}

	@Override
	public void events() {
		// TODO Auto-generated method stub
		jbLogin.addActionListener(e -> {
			new LogInFrame(this);
		});
		jbSignUp.addActionListener(e -> {
			new SignUpFrame();
		});
		jbBookList.addActionListener(e -> {
			new BookList();
		});
		jcTop.addActionListener(e -> {
			gridChange();
		});

	}

	private void gridChange() {
		// TODO Auto-generated method stub

		jpCenter.jpCenter.removeAll();

		String comboIndex = jcTop.getSelectedIndex() + "";
		if (comboIndex.equals("0")) {
			comboIndex = "%";
		}
//		String d_no = jcTop.data.get(comboIndex).get(1);

		Vector<ImageModel> data = db
				.getImageData(
						"select d.d_no, b.b_name, d.d_name,  b.b_img, b.b_author, b.b_exp from 2023지방_2.book as b\r\n"
								+ "join division as d\r\n" + "	on b.d_no = d.d_no\r\n" + "    join rental as r \r\n"
								+ "    on b.b_no = r.b_no\r\n" + "	where d.d_no like ?" + "    group by b.b_no\r\n"
								+ "    \r\n" + "    order by count(b.b_no) desc, b.b_no\r\n" + "    limit 5;",
						3, comboIndex);
		for (ImageModel row : data) {
			String no = row.getData().get(0);
			String title = row.getData().get(1);
			String author = row.getData().get(4);
			String exp = row.getData().get(5);

			jlImg = new imageLabel(title, row.getIcon(), 150, 180).setBottom().setLine().setCenter().setSize(14);

			jlImg.addMouseListener(new MouseAdapter() {

				@Override
				public void mousePressed(MouseEvent e) {
					// TODO Auto-generated method stub
					super.mousePressed(e);
				}

			});

			author = DataManager.subString(author, 13, "");
			exp = DataManager.subString(exp, 13, "");

			String toolTipText = "<html>" + "저자 : " + author + "<br/>" + "설명 : " + exp + "</html>";
			jlImg.setToolTipText(toolTipText);

			jpCenter.jpCenter.add(jlImg);

		}

		super.refresh();

	}

	public void logOutState() {
		// TODO Auto-generated method stub
		jpBottom.removeAll();
		model.LogState = null;

		jbBookList.setEnabled(false);
		jbMyPage.setEnabled(false);
		jbRead.setEnabled(false);

		jpBottom.setFlowCenter().add(jbLogin);
		jpBottom.add(jbSignUp);
		jpBottom.add(jbSignUp);
		jpBottom.add(jbBookList);
		jpBottom.add(jbMyPage);
		jpBottom.add(jbRead);
		jpBottom.add(jbClose);

		super.refresh();
	}

	public void logInState() {
		// TODO Auto-generated method stub
		jpBottom.removeAll();
		jpTop.add(jlImg);
		jpTop.removeAll();
		jpTop.add(jlImg);
		jbSignUp.setEnabled(false);
		jbBookList.setEnabled(true);
		jbMyPage.setEnabled(true);
		jbRead.setEnabled(true);

		jpBottom.setFlowCenter().add(jbLogin);
		jpBottom.add(jbSignUp);
		jpBottom.add(jbSignUp);
		jpBottom.add(jbBookList);
		jpBottom.add(jbMyPage);
		jpBottom.add(jbRead);
		jpBottom.add(jbClose);

		super.refresh();
	}
}
